{"ast":null,"code":"export const isValidUrl = string => {\n  try {\n    new URL(string);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\nexport const validateWorkflowForm = formData => {\n  const errors = {};\n  if (!formData.name.trim()) {\n    errors.name = '工作流名称为必填项';\n  }\n  if (!formData.platform) {\n    errors.platform = '请选择平台';\n  }\n  if (!formData.interval || formData.interval < 1) {\n    errors.interval = '发送间隔必须大于0';\n  }\n  if (formData.webhook && !isValidUrl(formData.webhook)) {\n    errors.webhook = '请输入有效的URL';\n  }\n  return errors;\n};\nexport const validateDropboxConfig = config => {\n  const errors = {};\n  ['apiKey', 'apiSecret', 'accessToken', 'refreshToken'].forEach(field => {\n    if (!config[field]) {\n      errors[field] = `${field} 为必填项`;\n    }\n  });\n  return errors;\n};\nexport const formatDate = date => {\n  return new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  }).format(date);\n};","map":{"version":3,"names":["isValidUrl","string","URL","_","validateWorkflowForm","formData","errors","name","trim","platform","interval","webhook","validateDropboxConfig","config","forEach","field","formatDate","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format"],"sources":["/Users/zakzak/Desktop/video_pub/video-publisher/src/utils/validators.js"],"sourcesContent":["export const isValidUrl = (string) => {\n    try {\n      new URL(string);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n  \n  export const validateWorkflowForm = (formData) => {\n    const errors = {};\n    \n    if (!formData.name.trim()) {\n      errors.name = '工作流名称为必填项';\n    }\n  \n    if (!formData.platform) {\n      errors.platform = '请选择平台';\n    }\n  \n    if (!formData.interval || formData.interval < 1) {\n      errors.interval = '发送间隔必须大于0';\n    }\n  \n    if (formData.webhook && !isValidUrl(formData.webhook)) {\n      errors.webhook = '请输入有效的URL';\n    }\n  \n    return errors;\n  };\n  \n  export const validateDropboxConfig = (config) => {\n    const errors = {};\n    \n    ['apiKey', 'apiSecret', 'accessToken', 'refreshToken'].forEach(field => {\n      if (!config[field]) {\n        errors[field] = `${field} 为必填项`;\n      }\n    });\n  \n    return errors;\n  };\n  \n  export const formatDate = (date) => {\n    return new Intl.DateTimeFormat('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(date);\n  };"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,MAAM,IAAK;EAClC,IAAI;IACF,IAAIC,GAAG,CAACD,MAAM,CAAC;IACf,OAAO,IAAI;EACb,CAAC,CAAC,OAAOE,CAAC,EAAE;IACV,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;EAChD,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE;IACzBF,MAAM,CAACC,IAAI,GAAG,WAAW;EAC3B;EAEA,IAAI,CAACF,QAAQ,CAACI,QAAQ,EAAE;IACtBH,MAAM,CAACG,QAAQ,GAAG,OAAO;EAC3B;EAEA,IAAI,CAACJ,QAAQ,CAACK,QAAQ,IAAIL,QAAQ,CAACK,QAAQ,GAAG,CAAC,EAAE;IAC/CJ,MAAM,CAACI,QAAQ,GAAG,WAAW;EAC/B;EAEA,IAAIL,QAAQ,CAACM,OAAO,IAAI,CAACX,UAAU,CAACK,QAAQ,CAACM,OAAO,CAAC,EAAE;IACrDL,MAAM,CAACK,OAAO,GAAG,WAAW;EAC9B;EAEA,OAAOL,MAAM;AACf,CAAC;AAED,OAAO,MAAMM,qBAAqB,GAAIC,MAAM,IAAK;EAC/C,MAAMP,MAAM,GAAG,CAAC,CAAC;EAEjB,CAAC,QAAQ,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,CAAC,CAACQ,OAAO,CAACC,KAAK,IAAI;IACtE,IAAI,CAACF,MAAM,CAACE,KAAK,CAAC,EAAE;MAClBT,MAAM,CAACS,KAAK,CAAC,GAAG,GAAGA,KAAK,OAAO;IACjC;EACF,CAAC,CAAC;EAEF,OAAOT,MAAM;AACf,CAAC;AAED,OAAO,MAAMU,UAAU,GAAIC,IAAI,IAAK;EAClC,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;IACtCC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,SAAS;IAChBC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACV,CAAC,CAAC,CAACC,MAAM,CAACT,IAAI,CAAC;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}